name: Deploy to EC2

on:
  push:
    branches: ['master']

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Show secrets
        run: |
          echo "Current HOST: ${{ secrets.EC2_HOST }}"
          echo "Current USER: ${{ secrets.EC2_USER }}"
          echo "Current PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}"

      - run: npm ci

      - name: Verify dependencies
        run: npm ls

      - name: Build application
        run: npm run build --if-present

      - name: Verify build output
        run: |
          echo "Listing dist folder contents"
          ls -la dist

      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > github-ec2.pem && chmod 600 github-ec2.pem

          ssh -o StrictHostKeyChecking=no -i github-ec2.pem ${USER}@${HOST} '
            echo "Current directory: $(pwd)"
            echo "Listing home directory:"
            ls -la ~

            echo "Installing Node.js..."
            if ! command -v nvm &> /dev/null; then
              curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
              export NVM_DIR="$HOME/.nvm"
              [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            fi
            nvm install node

            echo "Installing PM2..."
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi

            REPO_URL="https://github.com/Rodrigo15975/ec-2"
            BRANCH="master"
            REPO_DIR="$HOME/Rodrigo15975/ec-2"

            if [ -d "$REPO_DIR/.git" ]; then
              cd "$REPO_DIR"
              git pull origin "$BRANCH"
            else
              git clone "$REPO_URL" "$REPO_DIR"
              cd "$REPO_DIR"
            fi

            npm install

            echo "Verifying build output..."
            ls -la dist

            if [ -f "dist/main.js" ]; then
              echo "Found main.js in dist folder"
            else
              echo "Error: main.js not found in dist folder. Please verify your build configuration."
              exit 1
            fi

            echo "Starting/restarting application..."
            pm2 start dist/main.js --name my-app || pm2 restart my-app
          '
